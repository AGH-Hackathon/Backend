//plugins {
//	id 'java'
//	id 'org.springframework.boot' version '3.0.5'
//	id 'io.spring.dependency-management' version '1.1.0'
//}
//
//group = 'agh.edu.pl'
//version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '17'
//
//repositories {
//	mavenCentral()
//}
//
//dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	runtimeOnly 'com.h2database:h2'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'io.projectreactor:reactor-test'
//
//
//}
//
//tasks.named('test') {
//	useJUnitPlatform()
//}
plugins {
	id 'org.springframework.boot' version '3.0.2' apply false
	id 'io.spring.dependency-management' version '1.1.0' apply false
}

allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {
	group = 'com.griddynamics.atyranski'
	version = '1.0.0'
}

configure(subprojects.findAll {it.name != 'common'}) {

	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'application'
	apply plugin: 'java'

	sourceCompatibility = '17'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		implementation 'org.springframework.boot:spring-boot-starter-websocket'
		runtimeOnly 'com.h2database:h2'
		testImplementation 'io.projectreactor:reactor-test'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		implementation project(':common')
		testImplementation project(':common')
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-Xlint:unchecked'
	options.deprecation = true
}